{"version":3,"sources":["logo.svg","services/DataService.js","storestates.js","components/secsocials/secsocials.js","components/header/header.js","components/bulletinboard/bulletin.js","components/bulletinboard/bulletinboard.js","utils/firebase.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","config","require","DataService","url","urlHvAppApi","axios","method","concat","headers","Content-Type","withCredentials","timeout","objStoreStates","StoreStates","Object","classCallCheck","this","extendObservable","socials","undefined","vSocials","i","j","hasOwnProperty","SecSocials","props","lstLi","lstSocials","objStoreState","getSocials","toUpperCase","push","react_default","a","createElement","key","href","target","className","name","getListOfWebSocials","Header","logo","onClick","console","log","alt","altImg","src","urlImg","vName","yourSelf","legend","secsocials_secsocials","Bulletin","description","level","items","title","animation","res","classBulletin","intLevel","parseInt","lstStars","_getDrawLevel","list","length","_getListItems","BulletinBoard","bulletins","data","listBulletins","item","bulletin","_getBulletins","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","storageRef","ref","objDataService","App","_this","possibleConstructorReturn","getPrototypeOf","call","state","dataCV","imgProfile","_this2","getDataCV","then","response","setState","setSocials","websites","child","configApp","defIdPerson","getDownloadURL","catch","err","firtsName","defUrlImgProfile","isFirebase","visibleName","nameYourselfProfessionally","skills","header_header","getNamePerson","getVisibleName","getYourself","getLegend","bulletinboard_bulletinboard","getSkills","Component","observer","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11f97482.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\r\nlet config = require('../configapp.json');\r\n\r\nclass DataService{\r\n    getDataCV(){\r\n        let url = config.urlHvAppApi;\r\n        // try {\r\n        //     let url = config.urlHvAppApi;\r\n        //     let response = undefined;\r\n\r\n        //     // axios({\r\n        //     //     method: 'get',\r\n        //     //     url: `${url}dataCVPerson/`,\r\n        //     //     headers: {\r\n        //     //         'Content-Type': 'application/json, text/plain, */*'\r\n        //     //     },\r\n        //     //     withCredentials: false,\r\n        //     //     timeout: 5000\r\n        //     // })\r\n        //     // .then(resp => {\r\n        //     //     console.log(resp.data);\r\n        //     //     response = resp.data;                \r\n        //     // })\r\n        //     // .catch( err => {\r\n        //     //     console.log(err);\r\n        //     // });\r\n\r\n        //     response = 'hola';\r\n\r\n        //     return response;\r\n        // } catch (error) {\r\n        //     console.log(error);\r\n        // }\r\n\r\n        return axios({\r\n                    method: 'get',\r\n                    url: `${url}dataCVPerson/p1`,\r\n                    headers: {\r\n                        'Content-Type': 'application/json, text/plain, */*'\r\n                    },\r\n                    withCredentials: false,\r\n                    timeout: 5000\r\n                });\r\n    }\r\n}\r\n\r\nexport default DataService;\r\n\r\n//http://localhost:3001\r\n//https://us-central1-mihv-333.cloudfunctions.net/app/dataCVPerson?id=p1\r\n//https://us-central1-mihv-333.cloudfunctions.net/getPerson?id=p1","import { extendObservable, computed } from 'mobx';\r\n\r\nclass StoreStates{\r\n    constructor(){\r\n        extendObservable(this, \r\n            {\r\n                socials: undefined\r\n            }\r\n        );\r\n    }\r\n\r\n    setSocials(vSocials){\r\n        //console.log('vSocials', vSocials);\r\n\r\n        for (let i in vSocials) {\r\n            for (let j in vSocials[i]){\r\n                if (vSocials[i][j].hasOwnProperty('name')){\r\n                    //console.log('name', vSocials[i][j]);\r\n                }\r\n\r\n                //console.log('vSocials[i][j]', vSocials[i][j]);\r\n            }\r\n        }\r\n        this.socials = vSocials;\r\n        //this.socials = JSON.stringify(vSocials);\r\n        //console.log('this.socials', this.socials.blogspot);\r\n    }\r\n\r\n    getSocials(){\r\n        return this.socials\r\n    }\r\n}\r\n\r\nvar objStoreStates = new StoreStates();\r\n\r\nexport default objStoreStates;","import React from 'react';\r\n//import FontAwesome from 'react-fontawesome';\r\n\r\nimport objStoreState from '../../storestates';\r\n//import { clearObserving } from 'mobx/lib/internal';\r\nimport './secsocials.css'\r\n\r\nconst SecSocials = props => {    \r\n    let lstLi = [];\r\n\r\n    const getListOfWebSocials = () =>{\r\n        let url = \"\";\r\n        \r\n        // let lstSocials = JSON.stringify(objStoreState.getSocials());\r\n        let lstSocials = objStoreState.getSocials();\r\n\r\n        for (let i in lstSocials) {            \r\n            switch (i.toUpperCase()) {                \r\n                case \"BLOGGER\":                    \r\n                    for (let j in lstSocials[i]) {\r\n                        if ('url' === j){                             \r\n                            url = lstSocials[i][j];\r\n                            break;\r\n                        }\r\n                    }\r\n                    lstLi.push(\r\n                        <li key={i}>\r\n                            <a href={url} target=\"_blank\">\r\n                                {/* <FontAwesome className=\"fa fa-blogger\" name={i}></FontAwesome> */}\r\n                                <i className=\"fab fa-blogger fa-2x\" name={i}></i>\r\n                            </a>\r\n                        </li>\r\n                    )\r\n                    break;\r\n                case \"GITHUB\":\r\n                    for (let j in lstSocials[i]) {\r\n                        if ('url' === j){                             \r\n                            url = lstSocials[i][j];\r\n                            break;\r\n                        }\r\n                    }\r\n                    lstLi.push(\r\n                        <li key={i}>\r\n                            <a href={url} target=\"_blank\">\r\n                                <i className=\"fab fa-github fa-2x\" name={i}></i>\r\n                            </a>\r\n                        </li>\r\n                    )\r\n                    break;\r\n                case \"TWITTER\":\r\n                    for (let j in lstSocials[i]) {\r\n                        if ('url' === j){                             \r\n                            url = lstSocials[i][j];\r\n                            break;\r\n                        }\r\n                    }\r\n                    lstLi.push(\r\n                        <li key={i}>\r\n                            <a href={url} target=\"_blank\">\r\n                                <i className=\"fab fa-twitter fa-2x\" name={i}></i>\r\n                            </a>\r\n                        </li>\r\n                    )\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        //console.log('lstLi', lstLi);\r\n\r\n        return\r\n    }\r\n\r\n    getListOfWebSocials();\r\n\r\n    return(\r\n        <div className=\"secSocials\">\r\n            <ul>\r\n                {lstLi}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SecSocials;","import React from 'react';\r\n\r\nimport SecSocials from '../secsocials/secsocials';\r\nimport './header.css'\r\n\r\nconst Header = props => {\r\n    const { logo } = props;\r\n\r\n    const _getSrcImg = () => {        \r\n        console.log(\"header\", props);\r\n    }\r\n\r\n    return (\r\n        <header className=\"secHeader\">\r\n            <div className=\"divHeaderImgProfile\" onClick={_getSrcImg}>\r\n                <img className=\"imgHeaderImgProfile\" \r\n                    alt={props.altImg}\r\n                    src={props.urlImg}>\r\n                </img>\r\n            </div>\r\n            <h1>{props.vName}</h1>\r\n            <h2>{props.yourSelf}</h2>\r\n            <div className=\"desc\">\r\n                <p>{props.legend}</p>\r\n            </div>\r\n            {/* <div className=\"social\">\r\n            {_getSrcImg()}\r\n            </div> */}\r\n            <SecSocials></SecSocials>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport './bulletinboard.css';\r\n\r\nconst Bulletin = props => {\r\n    const { description, level, items, title, animation} = props;\r\n\r\n    const _getListItems = () => {\r\n        let list = [];\r\n        if(items !== undefined && items !== null){\r\n            for(let i = 0; i <= items.length - 1; i++){\r\n                list.push(<li key={i}>{items[i]}</li>);\r\n            }\r\n        }\r\n\r\n        return list\r\n    }\r\n\r\n    const _getDrawLevel = () => {\r\n        let stars = \"\";\r\n        let intLevel = parseInt(level);\r\n        let lstStars = [];\r\n        for(let i = 1; i <= intLevel; i++){\r\n            //starts = starts + \"*\" + \" \";\r\n            lstStars.push(<i className='fa fa-star'></i>)\r\n        }\r\n        //starts = starts.substr(0, starts.length - 1);\r\n\r\n        //return starts;\r\n        return lstStars;\r\n    }\r\n\r\n    const classBulletin = () => {\r\n        let res = 'bbulletin';\r\n        if(animation === true){\r\n            res = 'bbulletin bbulletinAnimation';\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    return(\r\n        <div className={classBulletin()}>\r\n            <h2 className=\"title\">{ title }</h2>\r\n            <p className='level'>{_getDrawLevel()}</p>\r\n            <p>{ description }</p>\r\n            <ul className=\"attributes\">\r\n                {\r\n                    _getListItems()\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bulletin;","import React from 'react';\r\n\r\nimport Bulletin from './bulletin';\r\n\r\nimport './bulletinboard.css';\r\n\r\nconst BulletinBoard = props => {\r\n    const bulletins = props.data;\r\n    const {animation} = props;\r\n\r\n    const _getBulletins = () => {\r\n        let listBulletins = []\r\n        if(bulletins !== undefined && bulletins !== null){\r\n            for(let item in bulletins){\r\n                listBulletins.push(\r\n                <Bulletin animation={animation}\r\n                        description={bulletins[item].description}\r\n                        key={item}\r\n                        level={bulletins[item].level}\r\n                        items={bulletins[item].items}\r\n                        title={bulletins[item].name} />\r\n                );                \r\n                console.log(item, bulletins[item]);\r\n            }\r\n\r\n            return listBulletins;\r\n        }\r\n\r\n        // let lisBulletins = bulletins.map((item)=>{\r\n        //     console.log(item);\r\n        // });\r\n    }\r\n    \r\n    //console.log(bulletins);\r\n    //_getBulletins()    \r\n\r\n    return(\r\n        <div className=\"bboard\">\r\n            {_getBulletins()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BulletinBoard;","import * as firebase from 'firebase';\r\n\r\nlet cfgFB = {\r\n    apiKey: \"AIzaSyC_ijNJZOAxb96RxBfa-ULGEBXcmUlY8NE\",\r\n    authDomain: \"mihv-333.firebaseapp.com\",\r\n    databaseURL: \"https://mihv-333.firebaseio.com\",\r\n    projectId: \"mihv-333\",\r\n    storageBucket: \"mihv-333.appspot.com\",\r\n    messagingSenderId: \"127491763235\"\r\n};\r\n\r\nfirebase.initializeApp(cfgFB);\r\n\r\n//const database = firebase.database();\r\nconst storage = firebase.storage();\r\n\r\n// const platillos = database.ref('alimentos/');\r\n// const bebidas = database.ref('bebidas/');\r\nconst storageRef = storage.ref();\r\n\r\nconst data = {\r\n    storageRef\r\n};\r\n\r\nexport default data;","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react'\r\n// import DevTools from 'mobx-react-devtools';\r\n\r\nimport DataService from '../services/DataService';\r\nimport objStoreStates from '../storestates';\r\nimport Header from '../components/header/header';\r\nimport BulletinBoard from '../components/bulletinboard/bulletinboard';\r\n\r\nimport firebase from '../utils/firebase';\r\nimport configApp from '../configapp.json';\r\nimport logo from '../logo.svg';\r\nimport './App.css';\r\n\r\nlet objDataService = new DataService();\r\n\r\nclass App extends Component {  \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            dataCV: undefined,\r\n            imgProfile: undefined\r\n        };\r\n    } \r\n\r\n    componentWillMount() {\r\n        objDataService.getDataCV()\r\n        .then((response) => {\r\n            this.setState({\r\n                dataCV: response.data\r\n            });\r\n            \r\n            objStoreStates.setSocials(this.state.dataCV.websites);\r\n\r\n            return firebase.storageRef.child(`imgProfile/${configApp.defIdPerson}/${this.state.dataCV.imgProfile.url}`).getDownloadURL();            \r\n        })\r\n        .then(url => {\r\n            this.setState({\r\n                imgProfile: url                        \r\n            });\r\n        })        \r\n        .catch( err => console.log(err));\r\n    }\r\n\r\n    //JSON.stringify(objDataService.getDataCV())\r\n\r\n    getNamePerson() {\r\n        return this.state.dataCV !== undefined ? this.state.dataCV.firtsName : \"user\";\r\n    }\r\n\r\n    getUrlImgProfile() {\r\n        let res = configApp.defUrlImgProfile;\r\n\r\n        if (this.state.dataCV !== undefined){\r\n            if(this.state.dataCV.imgProfile !== undefined){\r\n                if(this.state.dataCV.imgProfile.isFirebase){\r\n                    \r\n                    if(this.state.dataCV.imgProfile.url !== undefined && this.state.dataCV.imgProfile.url !== null){\r\n                        //console.log(firebase.storageRef.child);\r\n                        //console.log(this.state.dataCV);\r\n                        firebase.storageRef.child(`imgProfile/${configApp.defIdPerson}/${this.state.dataCV.imgProfile.url}`).getDownloadURL()\r\n                        .then( (url) => {\r\n                            //console.log(url);\r\n                            return url;\r\n                        })\r\n                        .catch(err => console.log(err));\r\n                    }\r\n                }\r\n                else{\r\n                    if(this.state.dataCV.imgProfile.url !== undefined && this.state.dataCV.imgProfile.url !== null){\r\n                        res = this.state.dataCV.imgProfile.url;\r\n                    }\r\n                }\r\n                //res = this.state.imgProfile;\r\n            }\r\n        }\r\n\r\n        console.log('getUrlImgProfile', res);\r\n        //return res;\r\n    }\r\n\r\n    getVisibleName() {        \r\n        return this.state.dataCV !== undefined ? this.state.dataCV.visibleName : ''\r\n    }\r\n\r\n    getYourself() {        \r\n        return this.state.dataCV !== undefined ? this.state.dataCV.nameYourselfProfessionally : ''\r\n    }\r\n\r\n    getLegend() {        \r\n        return this.state.dataCV !== undefined ? this.state.dataCV.legend : ''\r\n    }\r\n\r\n    getSkills(){\r\n        return this.state.dataCV !== undefined ? this.state.dataCV.skills : null\r\n    }\r\n\r\n    render() {\r\n        //const _urlImgProfile = this.getUrlImgProfile();\r\n        \r\n        return (\r\n            <div className=\"App\">\r\n                <Header logo={logo} altImg={this.getNamePerson()} urlImg={this.state.imgProfile} \r\n                    vName={this.getVisibleName()} yourSelf={this.getYourself()} legend={this.getLegend()} />\r\n                <BulletinBoard data={this.getSkills()} animation={true}/>\r\n                \r\n                {/* <div>{this.state.dataCV !== undefined ? this.state.dataCV.firtsName: false}</div>\r\n                <div>{}</div>\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <div onClick={this.test}>hola</div> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}